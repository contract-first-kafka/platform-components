apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: platform
spec:
  kafka:
    config:
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      default.replication.factor: 3
      min.insync.replicas: 2
      inter.broker.protocol.version: '3.7'
    storage:
      type: persistent-claim
      size: 10Gi
    listeners:
      - name: oauth
        port: 9096
        tls: true
        type: internal
        authentication:
          type: oauth
          enableOauthBearer: true
          jwksEndpointUri: https://keycloak.{{ .Values.clusterRouterDomain }}/realms/kafka/protocol/openid-connect/certs
          validIssuerUri: https://keycloak.{{ .Values.clusterRouterDomain }}/realms/kafka
          userNameClaim: azp
          clientId: kafka
          clientSecret:
            secretName: kafka-oidc
            key: secret
          tlsTrustedCertificates:
            - secretName: kafka-listener-cert
              certificate: ca.crt
        configuration:
          brokerCertChainAndKey:
            secretName: kafka-listener-cert
            certificate: tls.crt
            key: tls.key
    version: 3.7.0
    replicas: 3
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          key: kafka-metrics-config.yml
          name: kafka-metrics
  entityOperator:
    topicOperator: {}
    userOperator: {}
  zookeeper:
    storage:
      type: persistent-claim
      size: 10Gi
    replicas: 3
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: zookeeper-metrics-config.yml
  kafkaExporter:
    topicRegex: ".*"
    groupRegex: ".*"